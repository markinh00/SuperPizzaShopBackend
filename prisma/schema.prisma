// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    output   = "../node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Admin {
    id        String   @id @default(uuid())
    name      String
    email     String   @unique
    password  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Customer {
    id        String   @id @default(uuid())
    name      String
    email     String   @unique
    password  String
    phone     String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    orders Order[]
}

model Product {
    id               String           @id @default(uuid())
    name             String
    description      String?
    category         String?
    priceInCents     Int
    createdAt        DateTime         @default(now())
    updatedAt        DateTime         @updatedAt
    productsInOrders ProductInOrder[]
}

model Order {
    id                String   @id @default(uuid())
    totalPriceInCents Int
    address           String
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt

    customerId String?
    customer   Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)

    productsInOrder ProductInOrder[]
}

model ProductInOrder {
    id           String  @id @default(uuid())
    name         String
    description  String?
    category     String?
    priceInCents Int
    quantity     Int

    orderId String
    order   Order  @relation(fields: [orderId], references: [id])

    productId String?
    product   Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
}
